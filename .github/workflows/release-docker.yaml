name: "Release: docker"

on:
  push:
    branches:
      - '**'
    tags:
      - '*.*.*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Run Golangci lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --print-resources-usage

  build:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        Dockerfile: [Dockerfile.ubuntu]
        suffix: ["-ubuntu"]
        latest: ["auto"]
        include:
          - Dockerfile: Dockerfile.alpine
            suffix: -alpine
            latest: false
          - Dockerfile: Dockerfile.debian
            suffix: -debian
            latest: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ github.repository }},quay.io/${{ github.repository }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/${{ github.event.repository.default_branch }}/README.md
          flavor: |
            latest=${{ matrix.latest }}
            suffix=${{ matrix.suffix }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./${{ matrix.Dockerfile }}
          platforms: linux/amd64,linux/arm64,linux/arm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
